<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
		
		<!-- 配置c3p0连接池 -->
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			<!-- 诸如属性值 -->
			<property name="driverClass" value="com.mysql.jdbc.Driver"/>
			<property name="jdbcUrl" value="jdbc:mysql:///test"/>
			<property name="user" value="root"/>
			<property name="password" value="root"/>
		</bean>
		<!-- 创建service 和 dao 对象 -->
		<bean id="userService" class="com.wmr.springDay03.c3p0.UserService">
			<property name="userDao" ref="userDao"/>
		</bean>
		
		<bean id="userDao" class="com.wmr.springDay03.c3p0.UserDao">
			<!-- 注入jdbcTemplate属性 -->
			<property name="jdbcTemplate" ref="jdbcTemplate"/>
		</bean>
		
		<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
			<!-- 注入datesource属性 -->
			<property name="dataSource" ref="dataSource"/>
		</bean>
		
		
		<!-- 转账环境 创建对象，并注入相关对象的相关属性-->
		<bean id="acount" class="com.wmr.springDay03.tx.Acount"></bean>
		<bean id="acountService" class="com.wmr.springDay03.tx.AcountService">
			<property name="acountDao" ref="acountDao"/>
		</bean>
		<bean id="acountDao" class="com.wmr.springDay03.tx.AcountDao">
			<property name="jdbcTemplate" ref="jdbcTemplate"/>
		</bean>
		
		<!-- 声明式事务处理 配置文件方式  使用aop思想-->
		<!-- 配置事务管理器 -->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"/>
		</bean>
		<!-- 第二步 -->
		<!-- 配置事务增强 -->
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<!-- 做事务操作 -->
			<tx:attributes>
				<!-- 设置进行事务操作匹配方法 -->
				<tx:method name="acount*" propagation="REQUIRED"/><!-- 以acount开头的方法都可以做事务操作 ,propagation事务隔离级别-->
			</tx:attributes>
		</tx:advice>	
		
		<!-- 第三步 -->
		<!-- 配置切面 -->
		<aop:config>
			<!-- 切入点 -->
			<aop:pointcut expression="execution(* com.wmr.springDay03.tx.AcountService.*(..))" id="pointcut1"/>
			<!-- 切面 -->
			<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut1"/>
		</aop:config>	
</beans>